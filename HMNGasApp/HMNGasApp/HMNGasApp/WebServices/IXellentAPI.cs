namespace HMNGasApp.WebServices
{
    public interface IXellentAPI
    {
        string Url { get; set; }
        bool UseDefaultCredentials { get; set; }

        event canConnectCompletedEventHandler canConnectCompleted;
        event contactCustomerCompletedEventHandler contactCustomerCompleted;
        event createPaymentPlanRequestCompletedEventHandler createPaymentPlanRequestCompleted;
        event getAccountStatementCompletedEventHandler getAccountStatementCompleted;
        event getactiveMeterReadingsCompletedEventHandler getactiveMeterReadingsCompleted;
        event getActivitiesCompletedEventHandler getActivitiesCompleted;
        event getAppliancesCompletedEventHandler getAppliancesCompleted;
        event getBillingAddressInfoCompletedEventHandler getBillingAddressInfoCompleted;
        event getBusRelActivitiesCompletedEventHandler getBusRelActivitiesCompleted;
        event getBusRelContactPersonCompletedEventHandler getBusRelContactPersonCompleted;
        event getBusRelDocumentsCompletedEventHandler getBusRelDocumentsCompleted;
        event getBusRelExpectedConsumptionCompletedEventHandler getBusRelExpectedConsumptionCompleted;
        event getBusRelExternalProvidersCompletedEventHandler getBusRelExternalProvidersCompleted;
        event getBusRelInfoCompletedEventHandler getBusRelInfoCompleted;
        event getBusRelInstallationInfoCompletedEventHandler getBusRelInstallationInfoCompleted;
        event getBusRelResponsibilitiesInfoCompletedEventHandler getBusRelResponsibilitiesInfoCompleted;
        event getCampaignDetailCompletedEventHandler getCampaignDetailCompleted;
        event getChangedCustomersCompletedEventHandler getChangedCustomersCompleted;
        event getConsDevelopementSumCompletedEventHandler getConsDevelopementSumCompleted;
        event getConsumptionFileCompletedEventHandler getConsumptionFileCompleted;
        event getConsumptionGrafWebTableCompletedEventHandler getConsumptionGrafWebTableCompleted;
        event getConsumptionsCompletedEventHandler getConsumptionsCompleted;
        event getContractDetailCompletedEventHandler getContractDetailCompleted;
        event getContractMeterReadingsCompletedEventHandler getContractMeterReadingsCompleted;
        event getContractPayerAndInstDetailsCompletedEventHandler getContractPayerAndInstDetailsCompleted;
        event getContractsByDeliveryTypeCompletedEventHandler getContractsByDeliveryTypeCompleted;
        event getContractsCompletedEventHandler getContractsCompleted;
        event getContractValidationCompletedEventHandler getContractValidationCompleted;
        event getCustomersCompletedEventHandler getCustomersCompleted;
        event getCustomerTransCompletedEventHandler getCustomerTransCompleted;
        event getDocuRefCompletedEventHandler getDocuRefCompleted;
        event getFileByteArrayCompletedEventHandler getFileByteArrayCompleted;
        event getFinancialCompletedEventHandler getFinancialCompleted;
        event getInstallationAddressCompletedEventHandler getInstallationAddressCompleted;
        event getInstallationDetailCompletedEventHandler getInstallationDetailCompleted;
        event getInstallationPlaceCompletedEventHandler getInstallationPlaceCompleted;
        event getInstallationsCompletedEventHandler getInstallationsCompleted;
        event getInstallationsLightCompletedEventHandler getInstallationsLightCompleted;
        event getInvoiceCompletedEventHandler getInvoiceCompleted;
        event getInvoiceConsumptionHistoryCompletedEventHandler getInvoiceConsumptionHistoryCompleted;
        event getInvoiceCopyByteArrayCompletedEventHandler getInvoiceCopyByteArrayCompleted;
        event getInvoiceCopyCompletedEventHandler getInvoiceCopyCompleted;
        event getInvoiceCopyLayoutSelectionByteArrayCompletedEventHandler getInvoiceCopyLayoutSelectionByteArrayCompleted;
        event getInvoiceCopyLayoutSelectionCompletedEventHandler getInvoiceCopyLayoutSelectionCompleted;
        event getInvoicedConsumptionsCompletedEventHandler getInvoicedConsumptionsCompleted;
        event getInvoiceDetailsCompletedEventHandler getInvoiceDetailsCompleted;
        event getInvoiceOpenTransactionCompletedEventHandler getInvoiceOpenTransactionCompleted;
        event getMeterDetailCompletedEventHandler getMeterDetailCompleted;
        event getMeterReadingOrderCompletedEventHandler getMeterReadingOrderCompleted;
        event getMeterReadingOrderInstallationCompletedEventHandler getMeterReadingOrderInstallationCompleted;
        event getMeterReadingsCompletedEventHandler getMeterReadingsCompleted;
        event getMeterReadingValidationCompletedEventHandler getMeterReadingValidationCompleted;
        event getMoveOutCompletedEventHandler getMoveOutCompleted;
        event getMoveOutDateValCompletedEventHandler getMoveOutDateValCompleted;
        event getNotificationInfoCompletedEventHandler getNotificationInfoCompleted;
        event getNotificationsCompletedEventHandler getNotificationsCompleted;
        event getOfferDetailCompletedEventHandler getOfferDetailCompleted;
        event getPasswordCompletedEventHandler getPasswordCompleted;
        event getPaymentPlanCompletedEventHandler getPaymentPlanCompleted;
        event getPaymentSchedulesCompletedEventHandler getPaymentSchedulesCompleted;
        event getPBSCustInfoCompletedEventHandler getPBSCustInfoCompleted;
        event getPermissionsCompletedEventHandler getPermissionsCompleted;
        event getPIDRelationInfoCompletedEventHandler getPIDRelationInfoCompleted;
        event getPotentialMeterPointInfoCompletedEventHandler getPotentialMeterPointInfoCompleted;
        event getPreferredCommunicationCompletedEventHandler getPreferredCommunicationCompleted;
        event getPreferredCommunicationTopicsCompletedEventHandler getPreferredCommunicationTopicsCompleted;
        event getProdDetailsForNewCustCompletedEventHandler getProdDetailsForNewCustCompleted;
        event getProductDetailsCompletedEventHandler getProductDetailsCompleted;
        event getProductORItemPriceHistoryCompletedEventHandler getProductORItemPriceHistoryCompleted;
        event getPurchaseDetailCompletedEventHandler getPurchaseDetailCompleted;
        event getPurchasesCompletedEventHandler getPurchasesCompleted;
        event getReadingBookByteArrayCompletedEventHandler getReadingBookByteArrayCompleted;
        event getReadingBookCompletedEventHandler getReadingBookCompleted;
        event getReadingBookURLCompletedEventHandler getReadingBookURLCompleted;
        event getServiceAgreementsCompletedEventHandler getServiceAgreementsCompleted;
        event getServiceReportsCompletedEventHandler getServiceReportsCompleted;
        event getTimeValuesCompletedEventHandler getTimeValuesCompleted;
        event getWorkOrderErrorCompletedEventHandler getWorkOrderErrorCompleted;
        event logoutCompletedEventHandler logoutCompleted;
        event newActivityCompletedEventHandler newActivityCompleted;
        event newAgreementCompletedEventHandler newAgreementCompleted;
        event newApplianceNotificationCompletedEventHandler newApplianceNotificationCompleted;
        event newCampaignReplyCompletedEventHandler newCampaignReplyCompleted;
        event newContractJournalCompletedEventHandler newContractJournalCompleted;
        event newContractPartCompletedEventHandler newContractPartCompleted;
        event newControlReadingCompletedEventHandler newControlReadingCompleted;
        event newCustBusRelCompletedEventHandler newCustBusRelCompleted;
        event newCustContactInfoCompletedEventHandler newCustContactInfoCompleted;
        event newCustInvoiceAddressCompletedEventHandler newCustInvoiceAddressCompleted;
        event newCustNemktoAltInfoCompletedEventHandler newCustNemktoAltInfoCompleted;
        event newCustNemktoBankInfoCompletedEventHandler newCustNemktoBankInfoCompleted;
        event newCustSalesJournalCompletedEventHandler newCustSalesJournalCompleted;
        event newDelPointDeliveryStatusCompletedEventHandler newDelPointDeliveryStatusCompleted;
        event newEquipmentCompletedEventHandler newEquipmentCompleted;
        event newInvoiceOpenTransDateCompletedEventHandler newInvoiceOpenTransDateCompleted;
        event newLogin_BECompletedEventHandler newLogin_BECompleted;
        event newLogin_FVCompletedEventHandler newLogin_FVCompleted;
        event newLoginCompletedEventHandler newLoginCompleted;
        event newLoginNemId_GEFCompletedEventHandler newLoginNemId_GEFCompleted;
        event newLoginNemId_PIDCompletedEventHandler newLoginNemId_PIDCompleted;
        event newMeterCheckCompletedEventHandler newMeterCheckCompleted;
        event newMeterReadingCompletedEventHandler newMeterReadingCompleted;
        event newMoveOutCompletedEventHandler newMoveOutCompleted;
        event newMovingInCompletedEventHandler newMovingInCompleted;
        event newMovingRegistrationCompletedEventHandler newMovingRegistrationCompleted;
        event newNemId_PIDCompletedEventHandler newNemId_PIDCompleted;
        event newNotificationJournalACompletedEventHandler newNotificationJournalACompleted;
        event newNotificationJournalBCompletedEventHandler newNotificationJournalBCompleted;
        event newPasswordCompletedEventHandler newPasswordCompleted;
        event newPaymentPlanCompletedEventHandler newPaymentPlanCompleted;
        event newPermissionCompletedEventHandler newPermissionCompleted;
        event newPreferredCommunicationTopicCompletedEventHandler newPreferredCommunicationTopicCompleted;
        event newProductSaleCompletedEventHandler newProductSaleCompleted;
        event newReadingBookCompletedEventHandler newReadingBookCompleted;
        event newSalesJournalCompletedEventHandler newSalesJournalCompleted;
        event newWebUserCompletedEventHandler newWebUserCompleted;
        event newWorkOrderErrorStatusCompletedEventHandler newWorkOrderErrorStatusCompleted;
        event resetPasswordCompletedEventHandler resetPasswordCompleted;
        event setCustNemktoAltInfoCompletedEventHandler setCustNemktoAltInfoCompleted;
        event setCustNemktoBankInfoCompletedEventHandler setCustNemktoBankInfoCompleted;
        event setPreferredCommunicationCompletedEventHandler setPreferredCommunicationCompleted;
        event setProdDetailsForNewCustCompletedEventHandler setProdDetailsForNewCustCompleted;
        event setProductDetailsCompletedEventHandler setProductDetailsCompleted;
        event submitComplaintsCompletedEventHandler submitComplaintsCompleted;

        void CancelAsync(object userState);
        bool canConnect(string Company);
        void canConnectAsync(string Company);
        void canConnectAsync(string Company, object userState);
        contactCustomerResponse contactCustomer(contactCustomerRequest Request);
        void contactCustomerAsync(contactCustomerRequest Request);
        void contactCustomerAsync(contactCustomerRequest Request, object userState);
        createPaymentPlanResponse createPaymentPlanRequest(createPaymentPlanRequest Request);
        void createPaymentPlanRequestAsync(createPaymentPlanRequest Request);
        void createPaymentPlanRequestAsync(createPaymentPlanRequest Request, object userState);
        AccountStatementResponse getAccountStatement(AccountStatementRequest request);
        void getAccountStatementAsync(AccountStatementRequest request);
        void getAccountStatementAsync(AccountStatementRequest request, object userState);
        MeterReadingOrderResponse getactiveMeterReadings(ActiveMeterReadingRequest request);
        void getactiveMeterReadingsAsync(ActiveMeterReadingRequest request);
        void getactiveMeterReadingsAsync(ActiveMeterReadingRequest request, object userState);
        getActivitiesResponse getActivities(getActivitiesRequest Request);
        void getActivitiesAsync(getActivitiesRequest Request);
        void getActivitiesAsync(getActivitiesRequest Request, object userState);
        getAppliancesResponse getAppliances(getAppliancesRequest Request);
        void getAppliancesAsync(getAppliancesRequest Request);
        void getAppliancesAsync(getAppliancesRequest Request, object userState);
        BillingAddressInfoResponse getBillingAddressInfo(BillingAddressInfoRequest request);
        void getBillingAddressInfoAsync(BillingAddressInfoRequest request);
        void getBillingAddressInfoAsync(BillingAddressInfoRequest request, object userState);
        getBusRelActivitiesResponse getBusRelActivities(getBusRelActivitiesRequest Request);
        void getBusRelActivitiesAsync(getBusRelActivitiesRequest Request);
        void getBusRelActivitiesAsync(getBusRelActivitiesRequest Request, object userState);
        getBusRelContactPersonResponse getBusRelContactPerson(getBusRelContactPersonRequest Request);
        void getBusRelContactPersonAsync(getBusRelContactPersonRequest Request);
        void getBusRelContactPersonAsync(getBusRelContactPersonRequest Request, object userState);
        getBusRelDocumentsResponse getBusRelDocuments(getBusRelDocumentsRequest Request);
        void getBusRelDocumentsAsync(getBusRelDocumentsRequest Request);
        void getBusRelDocumentsAsync(getBusRelDocumentsRequest Request, object userState);
        getBusRelExpectedConsumptionResponse getBusRelExpectedConsumption(getBusRelExpectedConsumptionRequest Request);
        void getBusRelExpectedConsumptionAsync(getBusRelExpectedConsumptionRequest Request);
        void getBusRelExpectedConsumptionAsync(getBusRelExpectedConsumptionRequest Request, object userState);
        getBusRelExternalProvidersResponse getBusRelExternalProviders(getBusRelExternalProvidersRequest Request);
        void getBusRelExternalProvidersAsync(getBusRelExternalProvidersRequest Request);
        void getBusRelExternalProvidersAsync(getBusRelExternalProvidersRequest Request, object userState);
        getBusRelInfoResponse getBusRelInfo(getBusRelInfoRequest Request);
        void getBusRelInfoAsync(getBusRelInfoRequest Request);
        void getBusRelInfoAsync(getBusRelInfoRequest Request, object userState);
        getBusRelInstallationInfoResponse getBusRelInstallationInfo(getBusRelInstallationInfoRequest Request);
        void getBusRelInstallationInfoAsync(getBusRelInstallationInfoRequest Request);
        void getBusRelInstallationInfoAsync(getBusRelInstallationInfoRequest Request, object userState);
        getBusRelResponsibilitiesInfoResponse getBusRelResponsibilitiesInfo(getBusRelResponsibilitiesInfoRequest Request);
        void getBusRelResponsibilitiesInfoAsync(getBusRelResponsibilitiesInfoRequest Request);
        void getBusRelResponsibilitiesInfoAsync(getBusRelResponsibilitiesInfoRequest Request, object userState);
        CampaignDetailResponse getCampaignDetail(CampaignDetailRequest request);
        void getCampaignDetailAsync(CampaignDetailRequest request);
        void getCampaignDetailAsync(CampaignDetailRequest request, object userState);
        ChangedCustomerResponse getChangedCustomers(ChangedCustomerRequest request);
        void getChangedCustomersAsync(ChangedCustomerRequest request);
        void getChangedCustomersAsync(ChangedCustomerRequest request, object userState);
        InvoicedConsumptionResponse getConsDevelopementSum(InvoicedConsumptionRequest request);
        void getConsDevelopementSumAsync(InvoicedConsumptionRequest request);
        void getConsDevelopementSumAsync(InvoicedConsumptionRequest request, object userState);
        ConsumptionFileResponse getConsumptionFile(ConsumptionFileRequest request);
        void getConsumptionFileAsync(ConsumptionFileRequest request);
        void getConsumptionFileAsync(ConsumptionFileRequest request, object userState);
        ConsumptionWebGraphResponse getConsumptionGrafWebTable(ConsumptionWebGraphRequest request);
        void getConsumptionGrafWebTableAsync(ConsumptionWebGraphRequest request);
        void getConsumptionGrafWebTableAsync(ConsumptionWebGraphRequest request, object userState);
        ConsumptionResponse getConsumptions(ConsumptionRequest request);
        void getConsumptionsAsync(ConsumptionRequest request);
        void getConsumptionsAsync(ConsumptionRequest request, object userState);
        ContractDetailResponse getContractDetail(ContractDetailRequest request);
        void getContractDetailAsync(ContractDetailRequest request);
        void getContractDetailAsync(ContractDetailRequest request, object userState);
        MeterReadingOrderResponse getContractMeterReadings(ContractMeterReadingRequest request);
        void getContractMeterReadingsAsync(ContractMeterReadingRequest request);
        void getContractMeterReadingsAsync(ContractMeterReadingRequest request, object userState);
        ContractPayerAndInstDetailsResponse getContractPayerAndInstDetails(ContractPayerAndInstDetailsRequest Request);
        void getContractPayerAndInstDetailsAsync(ContractPayerAndInstDetailsRequest Request);
        void getContractPayerAndInstDetailsAsync(ContractPayerAndInstDetailsRequest Request, object userState);
        ContractResponse getContracts(ContractRequest request);
        void getContractsAsync(ContractRequest request);
        void getContractsAsync(ContractRequest request, object userState);
        FiberContractResponse getContractsByDeliveryType(FiberContractRequest Request);
        void getContractsByDeliveryTypeAsync(FiberContractRequest Request);
        void getContractsByDeliveryTypeAsync(FiberContractRequest Request, object userState);
        ContractValidationResponse getContractValidation(ContractValidationRequest request);
        void getContractValidationAsync(ContractValidationRequest request);
        void getContractValidationAsync(ContractValidationRequest request, object userState);
        CustomerResponse getCustomers(CustomerRequest request);
        void getCustomersAsync(CustomerRequest request);
        void getCustomersAsync(CustomerRequest request, object userState);
        getCustomerTransResponse getCustomerTrans(getCustomerTransRequest Request);
        void getCustomerTransAsync(getCustomerTransRequest Request);
        void getCustomerTransAsync(getCustomerTransRequest Request, object userState);
        DocuRefResponse getDocuRef(DocuRefRequest request);
        void getDocuRefAsync(DocuRefRequest request);
        void getDocuRefAsync(DocuRefRequest request, object userState);
        byte[] getFileByteArray(FileByteArrayRequest request);
        void getFileByteArrayAsync(FileByteArrayRequest request);
        void getFileByteArrayAsync(FileByteArrayRequest request, object userState);
        FinancialResponse getFinancial(FinancialRequest Request);
        void getFinancialAsync(FinancialRequest Request);
        void getFinancialAsync(FinancialRequest Request, object userState);
        InstallationAddressesResponse getInstallationAddress(InstallationAddressesRequest Request);
        void getInstallationAddressAsync(InstallationAddressesRequest Request);
        void getInstallationAddressAsync(InstallationAddressesRequest Request, object userState);
        InstallationDetailResponse getInstallationDetail(InstallationDetailRequest request);
        void getInstallationDetailAsync(InstallationDetailRequest request);
        void getInstallationDetailAsync(InstallationDetailRequest request, object userState);
        InstallationPlacesResponse getInstallationPlace(InstallationPlacesRequest Request);
        void getInstallationPlaceAsync(InstallationPlacesRequest Request);
        void getInstallationPlaceAsync(InstallationPlacesRequest Request, object userState);
        InstallationResponse getInstallations(InstallationRequest request);
        void getInstallationsAsync(InstallationRequest request);
        void getInstallationsAsync(InstallationRequest request, object userState);
        InstallationLightResponse getInstallationsLight(InstallationRequest request);
        void getInstallationsLightAsync(InstallationRequest request);
        void getInstallationsLightAsync(InstallationRequest request, object userState);
        InvoiceResponse getInvoice(InvoiceRequest request);
        void getInvoiceAsync(InvoiceRequest request);
        void getInvoiceAsync(InvoiceRequest request, object userState);
        InvoiceConsumptionHistoryResponse getInvoiceConsumptionHistory(InvoiceConsumptionHistoryRequest request);
        void getInvoiceConsumptionHistoryAsync(InvoiceConsumptionHistoryRequest request);
        void getInvoiceConsumptionHistoryAsync(InvoiceConsumptionHistoryRequest request, object userState);
        InvoiceCopyResponse getInvoiceCopy(InvoiceCopyRequest request);
        void getInvoiceCopyAsync(InvoiceCopyRequest request);
        void getInvoiceCopyAsync(InvoiceCopyRequest request, object userState);
        byte[] getInvoiceCopyByteArray(InvoiceCopyRequest request);
        void getInvoiceCopyByteArrayAsync(InvoiceCopyRequest request);
        void getInvoiceCopyByteArrayAsync(InvoiceCopyRequest request, object userState);
        InvoiceCopyLayoutSelectionResponse getInvoiceCopyLayoutSelection(InvoiceCopyLayoutSelectionRequest request);
        void getInvoiceCopyLayoutSelectionAsync(InvoiceCopyLayoutSelectionRequest request);
        void getInvoiceCopyLayoutSelectionAsync(InvoiceCopyLayoutSelectionRequest request, object userState);
        byte[] getInvoiceCopyLayoutSelectionByteArray(InvoiceCopyLayoutSelectionRequest request);
        void getInvoiceCopyLayoutSelectionByteArrayAsync(InvoiceCopyLayoutSelectionRequest request);
        void getInvoiceCopyLayoutSelectionByteArrayAsync(InvoiceCopyLayoutSelectionRequest request, object userState);
        InvoicedConsumptionResponse getInvoicedConsumptions(InvoicedConsumptionRequest request);
        void getInvoicedConsumptionsAsync(InvoicedConsumptionRequest request);
        void getInvoicedConsumptionsAsync(InvoicedConsumptionRequest request, object userState);
        InvoiceDetailsResponse getInvoiceDetails(InvoiceDetailsRequest Request);
        void getInvoiceDetailsAsync(InvoiceDetailsRequest Request);
        void getInvoiceDetailsAsync(InvoiceDetailsRequest Request, object userState);
        getInvoiceOpenTransactionResponse getInvoiceOpenTransaction(getInvoiceOpenTransactionRequest Request);
        void getInvoiceOpenTransactionAsync(getInvoiceOpenTransactionRequest Request);
        void getInvoiceOpenTransactionAsync(getInvoiceOpenTransactionRequest Request, object userState);
        MeterDetailResponse getMeterDetail(MeterDetailRequest request);
        void getMeterDetailAsync(MeterDetailRequest request);
        void getMeterDetailAsync(MeterDetailRequest request, object userState);
        MeterReadingOrderResponse getMeterReadingOrder(MeterReadingOrderRequest request);
        void getMeterReadingOrderAsync(MeterReadingOrderRequest request);
        void getMeterReadingOrderAsync(MeterReadingOrderRequest request, object userState);
        MeterReadingOrderInstallationResponse getMeterReadingOrderInstallation(MeterReadingOrderInstallationRequest request);
        void getMeterReadingOrderInstallationAsync(MeterReadingOrderInstallationRequest request);
        void getMeterReadingOrderInstallationAsync(MeterReadingOrderInstallationRequest request, object userState);
        MeterReadingsResponse getMeterReadings(MeterReadingsRequest request);
        void getMeterReadingsAsync(MeterReadingsRequest request);
        void getMeterReadingsAsync(MeterReadingsRequest request, object userState);
        newMeterReadingResponse getMeterReadingValidation(NewMeterReadingRequest Request);
        void getMeterReadingValidationAsync(NewMeterReadingRequest Request);
        void getMeterReadingValidationAsync(NewMeterReadingRequest Request, object userState);
        MoveOutResponse getMoveOut(MoveOutRequest request);
        void getMoveOutAsync(MoveOutRequest request);
        void getMoveOutAsync(MoveOutRequest request, object userState);
        MoveOutDateValResponse getMoveOutDateVal(MoveOutDateValRequest request);
        void getMoveOutDateValAsync(MoveOutDateValRequest request);
        void getMoveOutDateValAsync(MoveOutDateValRequest request, object userState);
        NotificationInfoResponse getNotificationInfo(NotificationInfoRequest Request);
        void getNotificationInfoAsync(NotificationInfoRequest Request);
        void getNotificationInfoAsync(NotificationInfoRequest Request, object userState);
        NotificationResponse getNotifications(NotificationRequest Request);
        void getNotificationsAsync(NotificationRequest Request);
        void getNotificationsAsync(NotificationRequest Request, object userState);
        OfferDetailResponse getOfferDetail(OfferDetailRequest request);
        void getOfferDetailAsync(OfferDetailRequest request);
        void getOfferDetailAsync(OfferDetailRequest request, object userState);
        GetPasswordResponse getPassword(GetPasswordRequest Request);
        void getPasswordAsync(GetPasswordRequest Request);
        void getPasswordAsync(GetPasswordRequest Request, object userState);
        PaymentPlanResponse getPaymentPlan(PaymentPlanRequest request);
        void getPaymentPlanAsync(PaymentPlanRequest request);
        void getPaymentPlanAsync(PaymentPlanRequest request, object userState);
        getPaymentScheduleResponse getPaymentSchedules(getPaymentScheduleRequest Request);
        void getPaymentSchedulesAsync(getPaymentScheduleRequest Request);
        void getPaymentSchedulesAsync(getPaymentScheduleRequest Request, object userState);
        PBSCustInfoResponse getPBSCustInfo(PBSCustInfoRequest request);
        void getPBSCustInfoAsync(PBSCustInfoRequest request);
        void getPBSCustInfoAsync(PBSCustInfoRequest request, object userState);
        PermissionResponse getPermissions(PermissionRequest request);
        void getPermissionsAsync(PermissionRequest request);
        void getPermissionsAsync(PermissionRequest request, object userState);
        PIDRelationInfoResponse getPIDRelationInfo(PIDRelationInfoRequest request);
        void getPIDRelationInfoAsync(PIDRelationInfoRequest request);
        void getPIDRelationInfoAsync(PIDRelationInfoRequest request, object userState);
        PotentialMeterPointResponse getPotentialMeterPointInfo(PotentialMeterPointRequest request);
        void getPotentialMeterPointInfoAsync(PotentialMeterPointRequest request);
        void getPotentialMeterPointInfoAsync(PotentialMeterPointRequest request, object userState);
        getPreferredCommunicationResponse getPreferredCommunication(getPreferredCommunicationRequest Request);
        void getPreferredCommunicationAsync(getPreferredCommunicationRequest Request);
        void getPreferredCommunicationAsync(getPreferredCommunicationRequest Request, object userState);
        PreferredCommunicationTopicsResponse getPreferredCommunicationTopics(PreferredCommuncationTopicsRequest Request);
        void getPreferredCommunicationTopicsAsync(PreferredCommuncationTopicsRequest Request);
        void getPreferredCommunicationTopicsAsync(PreferredCommuncationTopicsRequest Request, object userState);
        getProdDetailForNewCustResponse getProdDetailsForNewCust(getProdDetailForNewCustRequest Request);
        void getProdDetailsForNewCustAsync(getProdDetailForNewCustRequest Request);
        void getProdDetailsForNewCustAsync(getProdDetailForNewCustRequest Request, object userState);
        getProductDetailsResponse getProductDetails(getProductDetailsRequest Request);
        void getProductDetailsAsync(getProductDetailsRequest Request);
        void getProductDetailsAsync(getProductDetailsRequest Request, object userState);
        ProductOrItemPriceResponse getProductORItemPriceHistory(productOrItemPriceRequest Request);
        void getProductORItemPriceHistoryAsync(productOrItemPriceRequest Request);
        void getProductORItemPriceHistoryAsync(productOrItemPriceRequest Request, object userState);
        PurchaseDetailResponse getPurchaseDetail(PurchaseDetailRequest request);
        void getPurchaseDetailAsync(PurchaseDetailRequest request);
        void getPurchaseDetailAsync(PurchaseDetailRequest request, object userState);
        PurchaseResponse getPurchases(PurcheseRequest request);
        void getPurchasesAsync(PurcheseRequest request);
        void getPurchasesAsync(PurcheseRequest request, object userState);
        ReadingBookResponse getReadingBook(ReadingBookRequest request);
        void getReadingBookAsync(ReadingBookRequest request);
        void getReadingBookAsync(ReadingBookRequest request, object userState);
        byte[] getReadingBookByteArray(ReadingBookURLRequest request);
        void getReadingBookByteArrayAsync(ReadingBookURLRequest request);
        void getReadingBookByteArrayAsync(ReadingBookURLRequest request, object userState);
        ReadingBookURLResponse getReadingBookURL(ReadingBookURLRequest request);
        void getReadingBookURLAsync(ReadingBookURLRequest request);
        void getReadingBookURLAsync(ReadingBookURLRequest request, object userState);
        ServiceAgreementResponse getServiceAgreements(ServiceAgreementsRequest Request);
        void getServiceAgreementsAsync(ServiceAgreementsRequest Request);
        void getServiceAgreementsAsync(ServiceAgreementsRequest Request, object userState);
        ServicReportResponse getServiceReports(ServiceReportRequest Request);
        void getServiceReportsAsync(ServiceReportRequest Request);
        void getServiceReportsAsync(ServiceReportRequest Request, object userState);
        TimeValueResponse getTimeValues(TimeValueRequest request);
        void getTimeValuesAsync(TimeValueRequest request);
        void getTimeValuesAsync(TimeValueRequest request, object userState);
        getWorkOrderErrorResponse getWorkOrderError(getWorkOrderErrorRequest Request);
        void getWorkOrderErrorAsync(getWorkOrderErrorRequest Request);
        void getWorkOrderErrorAsync(getWorkOrderErrorRequest Request, object userState);
        LogoutResponse logout(LogoutRequest Request);
        void logoutAsync(LogoutRequest Request);
        void logoutAsync(LogoutRequest Request, object userState);
        NewActivityResponse newActivity(NewActivityRequest Request);
        void newActivityAsync(NewActivityRequest Request);
        void newActivityAsync(NewActivityRequest Request, object userState);
        NewAgreementResponse newAgreement(NewAgreementRequest Request);
        void newAgreementAsync(NewAgreementRequest Request);
        void newAgreementAsync(NewAgreementRequest Request, object userState);
        newApplianceNotificationResponse newApplianceNotification(newApplianceNotificationRequest Request);
        void newApplianceNotificationAsync(newApplianceNotificationRequest Request);
        void newApplianceNotificationAsync(newApplianceNotificationRequest Request, object userState);
        NewCampaignReplyResponse newCampaignReply(NewCampaignReplyRequest Request);
        void newCampaignReplyAsync(NewCampaignReplyRequest Request);
        void newCampaignReplyAsync(NewCampaignReplyRequest Request, object userState);
        NewContractJournalResponse newContractJournal(NewContractJournalRequest Request);
        void newContractJournalAsync(NewContractJournalRequest Request);
        void newContractJournalAsync(NewContractJournalRequest Request, object userState);
        NewContractPartResponse newContractPart(NewContractPartRequest Request);
        void newContractPartAsync(NewContractPartRequest Request);
        void newContractPartAsync(NewContractPartRequest Request, object userState);
        MeterReadingOrderResponse newControlReading(NewControlReadingRequest Request);
        void newControlReadingAsync(NewControlReadingRequest Request);
        void newControlReadingAsync(NewControlReadingRequest Request, object userState);
        newCustBusRelResponse newCustBusRel(NewCustBusRelRequest Request);
        void newCustBusRelAsync(NewCustBusRelRequest Request);
        void newCustBusRelAsync(NewCustBusRelRequest Request, object userState);
        NewCustContactInfoResponse newCustContactInfo(NewCustContactInfoRequest Request);
        void newCustContactInfoAsync(NewCustContactInfoRequest Request);
        void newCustContactInfoAsync(NewCustContactInfoRequest Request, object userState);
        NewCustInvoiceAddressResponse newCustInvoiceAddress(NewCustInvoiceAddressRequest Request);
        void newCustInvoiceAddressAsync(NewCustInvoiceAddressRequest Request);
        void newCustInvoiceAddressAsync(NewCustInvoiceAddressRequest Request, object userState);
        NewCustNemktoAltInfoResponse newCustNemktoAltInfo(NewCustNemktoAltInfoRequest Request);
        void newCustNemktoAltInfoAsync(NewCustNemktoAltInfoRequest Request);
        void newCustNemktoAltInfoAsync(NewCustNemktoAltInfoRequest Request, object userState);
        NewCustNemktoBankInfoResponse newCustNemktoBankInfo(NewCustNemktoBankInfoRequest Request);
        void newCustNemktoBankInfoAsync(NewCustNemktoBankInfoRequest Request);
        void newCustNemktoBankInfoAsync(NewCustNemktoBankInfoRequest Request, object userState);
        newCustSalesJournalResponse newCustSalesJournal(newCustSalesJournalRequest Request);
        void newCustSalesJournalAsync(newCustSalesJournalRequest Request);
        void newCustSalesJournalAsync(newCustSalesJournalRequest Request, object userState);
        newDelPointDeliveryStatusResponse newDelPointDeliveryStatus(newDelPointDeliveryStatusRequest Request);
        void newDelPointDeliveryStatusAsync(newDelPointDeliveryStatusRequest Request);
        void newDelPointDeliveryStatusAsync(newDelPointDeliveryStatusRequest Request, object userState);
        newEquipmentResponse newEquipment(newEquipmentRequest Request);
        void newEquipmentAsync(newEquipmentRequest Request);
        void newEquipmentAsync(newEquipmentRequest Request, object userState);
        newInvoiceOpenTransDateResponse newInvoiceOpenTransDate(NewInvoiceOpenTransDateRequest Request);
        void newInvoiceOpenTransDateAsync(NewInvoiceOpenTransDateRequest Request);
        void newInvoiceOpenTransDateAsync(NewInvoiceOpenTransDateRequest Request, object userState);
        newLoginResponse newLogin(NewLoginRequest Request);
        void newLoginAsync(NewLoginRequest Request);
        void newLoginAsync(NewLoginRequest Request, object userState);
        newLoginNemIdResponse newLoginNemId_GEF(NewLoginNemIdGEFRequest Request);
        void newLoginNemId_GEFAsync(NewLoginNemIdGEFRequest Request);
        void newLoginNemId_GEFAsync(NewLoginNemIdGEFRequest Request, object userState);
        newLoginNemIdResponse newLoginNemId_PID(NewLoginNemIdRequest Request);
        void newLoginNemId_PIDAsync(NewLoginNemIdRequest Request);
        void newLoginNemId_PIDAsync(NewLoginNemIdRequest Request, object userState);
        newLoginResponse_BE newLogin_BE(NewLoginRequest_BE Request);
        void newLogin_BEAsync(NewLoginRequest_BE Request);
        void newLogin_BEAsync(NewLoginRequest_BE Request, object userState);
        newLoginResponse_FV newLogin_FV(NewLoginRequest_FV Request);
        void newLogin_FVAsync(NewLoginRequest_FV Request);
        void newLogin_FVAsync(NewLoginRequest_FV Request, object userState);
        NewMeterCheckResponse newMeterCheck(NewMeterCheckRequest Request);
        void newMeterCheckAsync(NewMeterCheckRequest Request);
        void newMeterCheckAsync(NewMeterCheckRequest Request, object userState);
        newMeterReadingResponse newMeterReading(NewMeterReadingRequest Request);
        void newMeterReadingAsync(NewMeterReadingRequest Request);
        void newMeterReadingAsync(NewMeterReadingRequest Request, object userState);
        NewMoveOutResponse newMoveOut(NewMoveOutRequest Request);
        void newMoveOutAsync(NewMoveOutRequest Request);
        void newMoveOutAsync(NewMoveOutRequest Request, object userState);
        NewMovingInResponse newMovingIn(NewMovingInRequest Request);
        void newMovingInAsync(NewMovingInRequest Request);
        void newMovingInAsync(NewMovingInRequest Request, object userState);
        NewMovingRegistrationResponse newMovingRegistration(NewMovingRegistrationRequest Request);
        void newMovingRegistrationAsync(NewMovingRegistrationRequest Request);
        void newMovingRegistrationAsync(NewMovingRegistrationRequest Request, object userState);
        newNemIdResponse newNemId_PID(NewLoginNemIdRequest Request);
        void newNemId_PIDAsync(NewLoginNemIdRequest Request);
        void newNemId_PIDAsync(NewLoginNemIdRequest Request, object userState);
        newNotificationJournalAResponse newNotificationJournalA(newNotificationJournalARequest Request);
        void newNotificationJournalAAsync(newNotificationJournalARequest Request);
        void newNotificationJournalAAsync(newNotificationJournalARequest Request, object userState);
        newNotificationJournalBResponse newNotificationJournalB(newNotificationJournalBRequest Request);
        void newNotificationJournalBAsync(newNotificationJournalBRequest Request);
        void newNotificationJournalBAsync(newNotificationJournalBRequest Request, object userState);
        NewPasswordResponse newPassword(NewPasswordRequest Request);
        void newPasswordAsync(NewPasswordRequest Request);
        void newPasswordAsync(NewPasswordRequest Request, object userState);
        newPaymentPlanResponse newPaymentPlan(newPaymentPlanRequest Request);
        void newPaymentPlanAsync(newPaymentPlanRequest Request);
        void newPaymentPlanAsync(newPaymentPlanRequest Request, object userState);
        NewPermissionResponse newPermission(NewPermissionRequest Request);
        void newPermissionAsync(NewPermissionRequest Request);
        void newPermissionAsync(NewPermissionRequest Request, object userState);
        PreferredCommunicationTopicsResponse newPreferredCommunicationTopic(PreferredCommuncationTopicsRequest Request);
        void newPreferredCommunicationTopicAsync(PreferredCommuncationTopicsRequest Request);
        void newPreferredCommunicationTopicAsync(PreferredCommuncationTopicsRequest Request, object userState);
        NewProductSaleResponse newProductSale(NewProductSaleRequest Request);
        void newProductSaleAsync(NewProductSaleRequest Request);
        void newProductSaleAsync(NewProductSaleRequest Request, object userState);
        NewReadingBookResponse newReadingBook(NewReadingBookRequest Request);
        void newReadingBookAsync(NewReadingBookRequest Request);
        void newReadingBookAsync(NewReadingBookRequest Request, object userState);
        NewSalesJournalResponse newSalesJournal(NewSalesJournalRequest Request);
        void newSalesJournalAsync(NewSalesJournalRequest Request);
        void newSalesJournalAsync(NewSalesJournalRequest Request, object userState);
        NewWebUserResponse newWebUser(NewWebUserRequest Request);
        void newWebUserAsync(NewWebUserRequest Request);
        void newWebUserAsync(NewWebUserRequest Request, object userState);
        NewWorkOrderErrorStatusResponse newWorkOrderErrorStatus(NewWorkOrderErrorStatusRequest Request);
        void newWorkOrderErrorStatusAsync(NewWorkOrderErrorStatusRequest Request);
        void newWorkOrderErrorStatusAsync(NewWorkOrderErrorStatusRequest Request, object userState);
        ResetPasswordResponse resetPassword(ResetPasswordRequest Request);
        void resetPasswordAsync(ResetPasswordRequest Request);
        void resetPasswordAsync(ResetPasswordRequest Request, object userState);
        CustNemktoAltInfoResponse setCustNemktoAltInfo(CustNemktoAltInfoRequest request);
        void setCustNemktoAltInfoAsync(CustNemktoAltInfoRequest request);
        void setCustNemktoAltInfoAsync(CustNemktoAltInfoRequest request, object userState);
        CustNemktoBankInfoResponse setCustNemktoBankInfo(CustNemktoBankInfoRequest request);
        void setCustNemktoBankInfoAsync(CustNemktoBankInfoRequest request);
        void setCustNemktoBankInfoAsync(CustNemktoBankInfoRequest request, object userState);
        setPreferredCommunicationResponse setPreferredCommunication(setPreferredCommunicationRequest Request);
        void setPreferredCommunicationAsync(setPreferredCommunicationRequest Request);
        void setPreferredCommunicationAsync(setPreferredCommunicationRequest Request, object userState);
        setProdDetailForNewCustResponse setProdDetailsForNewCust(setProdDetailForNewCustRequest Request);
        void setProdDetailsForNewCustAsync(setProdDetailForNewCustRequest Request);
        void setProdDetailsForNewCustAsync(setProdDetailForNewCustRequest Request, object userState);
        setProductDetailsResponse setProductDetails(setProductDetailsRequest Request);
        void setProductDetailsAsync(setProductDetailsRequest Request);
        void setProductDetailsAsync(setProductDetailsRequest Request, object userState);
        submitComplaintsResponse submitComplaints(submitComplaintsRequest Request);
        void submitComplaintsAsync(submitComplaintsRequest Request);
        void submitComplaintsAsync(submitComplaintsRequest Request, object userState);
    }
}